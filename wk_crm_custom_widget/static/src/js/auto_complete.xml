<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">

    <t t-name="crm_field_customization.Many2ManyTagsField">
        <div class="o_field_tags d-inline-flex flex-wrap gap-1" t-att-class="{'o_tags_input o_input': !props.readonly}" t-ref="many2ManyTagsField">
            <TagsList tags="tags"/>
            <div t-if="showM2OSelectionField" class="o_field_many2many_selection d-inline-flex w-100" t-ref="autoComplete">
                <Many2XAutocomplete id="props.id" placeholder="tags.length ? '' : props.placeholder" resModel="relation" autoSelect="true" fieldString="string" activeActions="activeActions" update="update" quickCreate="activeActions.create ? quickCreate : null" context="props.context" getDomain.bind="getDomain" isToMany="true" nameCreateField="props.nameCreateField" noSearchMore="props.noSearchMore" nocustommany2many="false"/>
            </div>
        </div>
    </t>
    <t t-name="crm_field_customization.Many2manyseletion" t-inherit="web.AutoComplete" t-inherit-mode="extension">
        <xpath expr="//div/t[@t-if='displayOptions']/ul/t[@t-as='source']/t[@t-else='']//li" position="replace">
            
            <t t-set="ispresentcheckbox" t-value="__owl__.parent.props.nocustommany2many != undefined and !__owl__.parent.props.nocustommany2many and !option.classList"/>
            <div t-attf-class="#{ ispresentcheckbox ? 'd-flex ps-2' : '' }">
            <span t-att-custom-active="is_custom_widgetFun(ispresentcheckbox, option_index)"/>
                <input type="checkbox" t-if="ispresentcheckbox" name="product" t-att-id="option.id" t-att-ispresentcheckbox="ispresentcheckbox" t-on-click="addRecordData"/>
                <li class="o-autocomplete--dropdown-item ui-menu-item d-block" t-att-class="option.classList" t-on-mouseenter="() => this.onOptionMouseEnter([source_index, option_index])" t-on-mouseleave="() => this.onOptionMouseLeave([source_index, option_index])" t-on-click="() => this.onOptionClick([source_index, option_index])">
                    <a href="#" class="dropdown-item ui-menu-item-wrapper text-truncate" t-att-class="{ 'ui-state-active': isActiveSourceOption([source_index, option_index]) }">
                        <t t-if="source.optionTemplate">
                            <t t-call="{{ source.optionTemplate }}" />
                        </t>
                        <t t-else="">
                            <t t-esc="option.label" />
                        </t>
                    </a>
                </li>
            </div>
        </xpath>
    </t>
</templates>